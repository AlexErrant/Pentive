{
  "extends": "../../tsconfig.options.json",
  "compilerOptions": {
    "emitDeclarationOnly": false,
    "noEmit": true,
    /**
      Svelte Preprocess cannot figure out whether you have a value or a type, so tell TypeScript
      to enforce using `import type` instead of `import` for Types.
     */
    "importsNotUsedAsValues": "error",
    /**
       TypeScript doesn't know about import usages in the template because it only sees the
       script of a Svelte file. Therefore preserve all value imports. Requires TS 4.5 or higher.
      */
    "preserveValueImports": true,
    /**
       To have warnings/errors of the Svelte compiler at the correct position,
       enable source maps by default.
      */
    "sourceMap": true,
    "moduleResolution": "node",
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "target": "ESNext",
    "useDefineForClassFields": true,
    "module": "ESNext",
    "resolveJsonModule": true,
    "baseUrl": ".",
    /**
     * Typecheck JS in `.svelte` and `.js` files by default.
     * Disable checkJs if you'd like to use dynamic types in JS.
     * Note that setting allowJs false does not prevent the use
     * of JS in `.svelte` files.
     */
    "allowJs": true,
    "checkJs": true,
    "isolatedModules": true,
    "skipLibCheck": true,
    "ignoreDeprecations": "5.0", // https://github.com/sveltejs/kit/issues/8650
  },
  "include": [
    "src/**/*.d.ts",
    "src/**/*.ts",
    "src/**/*.js",
    "src/**/*.svelte",
    "vite.config.ts"
  ],
  "references": [
    {
      "path": "./tsconfig.node.json"
    },
    {
      "path": "../../app"
    }
  ],
}