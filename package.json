{
	"name": "pentive",
	"version": "0.0.0",
	"engines": {
		"node": "18.16.0",
		"pnpm": "8.5.1"
	},
	"packageManager": "pnpm@8.5.1",
	"devDependencies": {
		"concurrently": "^8.2.1",
		"kill-port": "^2.0.1",
		"typescript": "~5.2.2",
		"wrangler": "^3.10.0"
	},
	"scripts": {
		"kill": "kill-port 3012 3013 3014 3015 3016 3017 3018 3019",
		"//": "ugc and dev are distinct because you may frequently wish to restart `dev`, whereas `ugc` rarely changes",
		"ugc": "concurrently --kill-others -p \"[{name}]\" -n \"app-ugc,hub-ugc\" -c \"bgBlue.bold,bgMagenta.bold\" \"pnpm --filter app-ugc build --mode development && pnpm --filter app-ugc serve\" \"pnpm --filter hub-ugc build --mode development && pnpm --filter hub-ugc serve\"",
		"dev": "concurrently --kill-others -p \"[{name}]\" -n \"app,hub,cwa,peer,api-ugc\" -c \"bgBlue.bold,bgMagenta.bold,bgGreen.bold,bgWhiteBright.bold,bgCyan.bold\" \"pnpm --filter app dev\" \"pnpm --filter hub dev\" \"pnpm --filter cwa dev\" \"pnpm --filter peer dev\" \"pnpm --filter api-ugc dev\"",
		"//dev": "If you get `Error: EMFILE: too many open files...`, running all 3 options here https://stackoverflow.com/a/60881735 and restarting WSL worked for me",
		"build": "concurrently  --kill-others-on-fail -p \"[{name}]\" -n \"app,hub,app-ugc,hub-ugc,cwa,api-ugc\" -c \"bgBlue.bold,bgMagenta.bold,bgGreen.bold,bgYellow.bold,bgBlackBright.bold,bgCyan.bold\" \"pnpm --filter app build\"      \"pnpm --filter hub build\"      \"pnpm --filter app-ugc build\"      \"pnpm --filter hub-ugc build\"      \"pnpm --filter cwa build\"      \"pnpm --filter api-ugc build\"",
		"deploy": "concurrently                       -p \"[{name}]\" -n \"app,hub,app-ugc,hub-ugc,cwa,api-ugc\" -c \"bgBlue.bold,bgMagenta.bold,bgGreen.bold,bgYellow.bold,bgBlackBright.bold,bgCyan.bold\" \"pnpm --filter app run deploy\" \"pnpm --filter hub run deploy\" \"pnpm --filter app-ugc run deploy\" \"pnpm --filter hub-ugc run deploy\" \"pnpm --filter cwa run deploy\" \"pnpm --filter api-ugc run deploy\"",
		"format": "pnpm --parallel --no-bail -r format && prettier --ignore-path .gitignore --ignore-path misc.prettierignore --write .",
		"format:check": "pnpm --parallel --no-bail -r format:check && prettier --ignore-path .gitignore --ignore-path misc.prettierignore --check .",
		"eslint": "pnpm --parallel --no-bail -r eslint --max-warnings 0",
		"eslint:fix": "pnpm --parallel --no-bail -r eslint:fix --max-warnings 0",
		"eslint+test": "concurrently -p \"[{name}]\" -n \"lint,test,check\" -c \"bgBlue.bold,bgGreen.bold,bgMagenta.bold\" \"pnpm eslint\" \"pnpm test\" \"pnpm --filter pentive-svelte-plugin-example check\"",
		"test": "pnpm --filter shared-dom test:run",
		"tsc-build": "tsc --build",
		"tsc-clean": "rm -rf **/tsconfig.tsbuildinfo",
		"//ci": "simulate cicd locally",
		"ci": "git clean -xdf && pnpm i && pnpm tsc-build && pnpm eslint+test && ./mkenv.sh && ./rmcert.sh && ./mkcert.sh && pnpm build"
	},
	"pnpm": {
		"patchedDependencies": {
			"nightwind@1.1.13": "patches/nightwind@1.1.13.patch"
		}
	}
}
