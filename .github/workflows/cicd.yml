name: CI/CD

on:
  workflow_dispatch:
    inputs:
      forceTurboAll:
        description: 'force turbo:all'
        type: boolean
      forceDeploy:
        description: 'force a deploy'
        type: boolean
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'

jobs:
  check_and_deploy:
    name: check and deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache .turbo
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          node-version-file: '.nvmrc'

      - name: envsubst
        env:
          cloudflareAccountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          productionPeerSyncPublicKey: ${{ secrets.PEER_SYNC_PUBLIC_KEY }}
          VITE_PRODUCTION_AG_GRID_LICENSE: ${{ secrets.AG_GRID_LICENSE }}
          VITE_PRODUCTION_IFRAME_RESIZER_LICENSE: ${{ secrets.IFRAME_RESIZER_LICENSE }}
          VITE_PRODUCTION_HUB_DOMAIN: pentive.com
          VITE_TEST_HUB_ORIGIN: https://pentive.localhost:3044
          VITE_PRODUCTION_HUB_ORIGIN: https://pentive.com
          productionHubOrigin: https://pentive.com
          VITE_TEST_CWA_URL: https://cwa.pentive.localhost:3047/
          VITE_PRODUCTION_CWA_URL: https://cwa.pentive.com/
          VITE_TEST_AUGC_URL: https://user-generated-content-pentive.localhost:3049/
          VITE_PRODUCTION_AUGC_URL: https://api-ugc-production.alexerrant.workers.dev/
          VITE_TEST_APP_ORIGIN: https://app.pentive.localhost:3043
          VITE_PRODUCTION_APP_ORIGIN: https://app.pentive.com
          productionAppOrigin: https://app.pentive.com
          VITE_TEST_HUB_UGC_ORIGIN: https://hub-user-generated-content-pentive.localhost:3046
          VITE_PRODUCTION_HUB_UGC_ORIGIN: https://hub-ugc.pages.dev
          VITE_TEST_APP_UGC_ORIGIN: https://app-user-generated-content-pentive.localhost:3045
          VITE_PRODUCTION_APP_UGC_ORIGIN: https://app-ugc.pages.dev
          VITE_TEST_PEER_PORT: 3048
          VITE_PRODUCTION_PEER_HOST: 0.peerjs.com
          VITE_PRODUCTION_PEER_PORT: 443
        run: |
          envsubst <        ./cwa/example.wrangler.toml       >        ./cwa/wrangler.toml
          envsubst <    ./api-ugc/example.wrangler.toml       >    ./api-ugc/wrangler.toml
          envsubst <        ./hub/example.wrangler.toml       >        ./hub/wrangler.toml
          envsubst <            ./hub/.example.env.production >            ./hub/.env.production
          envsubst <            ./app/.example.env.production >            ./app/.env.production
          envsubst <            ./app/.example.env.test       >            ./app/.env.test
          envsubst < ./app-playwright/.example.env.test       > ./app-playwright/.env.test
          sudo tee -a /etc/hosts < devhosts
          openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -sha256 -days 3650 -nodes -subj "/C=XX/ST=StateName/L=CityName/O=CompanyName/OU=CompanySectionName/CN=CommonNameOrHostname"
          rsync -R key.pem  app/.cert/
          rsync -R cert.pem app/.cert/
          rsync -R key.pem  app-ugc/.cert/
          rsync -R cert.pem app-ugc/.cert/
          rsync -R key.pem  hub/.cert/
          rsync -R cert.pem hub/.cert/
          rsync -R key.pem  hub-ugc/.cert/
          rsync -R cert.pem hub-ugc/.cert/
          rsync -R key.pem  lrpc/.cert/
          rsync -R cert.pem lrpc/.cert/
          rsync -R key.pem  peer/.cert/
          rsync -R cert.pem peer/.cert/
          rsync -R key.pem  cwa/.cert/
          rsync -R cert.pem cwa/.cert/
          rsync -R key.pem  api-ugc/.cert/
          rsync -R cert.pem api-ugc/.cert/

      - name: pnpm install
        run: pnpm install

      # https://github.com/microsoft/playwright/issues/7249#issuecomment-1385567519
      - name: Store Playwright's Version
        run: |
          PLAYWRIGHT_VERSION=$(pnpm ls @playwright/test --filter app-playwright --json | jq '.[0].devDependencies["@playwright/test"].version' --raw-output)
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

      - name: Cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        working-directory: ./app-playwright
        run: npx playwright install --with-deps

      # https://github.com/microsoft/playwright/issues/30538#issuecomment-2185965508
      - name: Install system dependencies for WebKit
        # Some WebKit dependencies seem to lay outside the cache and will need to be installed separately
        if: ${{ steps.cache-playwright-browsers.outputs.cache-hit == 'true' }}
        working-directory: ./app-playwright
        run: npx playwright install-deps webkit

      - name: turbo
        run: pnpm turbo:all --force $FORCE_TURBO_ALL
        env:
          FORCE_TURBO_ALL: ${{ inputs.forceTurboAll || 'false' }}

      - name: Upload App Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: app-playwright-report
          path: app-playwright/playwright-report/
          retention-days: 30

      - name: deploy
        run: pnpm run deploy-only --force $FORCE_DEPLOY
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          FORCE_DEPLOY: ${{ inputs.forceDeploy || 'false' }}
          VITE_PRODUCTION_APP_ORIGIN: https://app.pentive.com
          VITE_PRODUCTION_HUB_ORIGIN: https://pentive.com
