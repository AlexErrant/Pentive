[
    "CREATE TABLE IF NOT EXISTS cardSetting (\n  id TEXT PRIMARY KEY, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  name TEXT,\n  details TEXT\n) STRICT;",
    "CREATE VIEW IF NOT EXISTS cardSettingName AS\n  SELECT rowid, name, ftsNormalize(name) AS normalized FROM cardSetting;",
    "CREATE TABLE IF NOT EXISTS template (\n  id TEXT PRIMARY KEY, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  name TEXT,\n  css TEXT,\n  fields TEXT,\n  created INTEGER,\n  updated INTEGER,\n  templateType TEXT,\n  ankiId INTEGER\n) STRICT;",
    "CREATE VIEW IF NOT EXISTS templateName AS\n  SELECT rowid, name, ftsNormalize(name) AS normalized FROM template;",
    "CREATE TABLE IF NOT EXISTS remoteTemplate (\n  localId TEXT, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  nook TEXT,\n  remoteId TEXT, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  uploadDate INTEGER,\n  PRIMARY KEY (localId, nook)\n) STRICT;",
    "CREATE TABLE IF NOT EXISTS noteBase (\n  id TEXT PRIMARY KEY, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  templateId TEXT, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  ankiNoteId INTEGER,\n  created INTEGER,\n  updated INTEGER,\n  tags TEXT,\n  fieldValues TEXT\n) STRICT;",
    "CREATE VIEW IF NOT EXISTS note AS\n  SELECT rowid, * FROM noteBase;",
    "CREATE TRIGGER IF NOT EXISTS note_after_insert INSTEAD OF INSERT ON note BEGIN\n  INSERT INTO noteBase (id,     templateId,     ankiNoteId,     created,     updated,     tags,     fieldValues)\n  VALUES           (new.id, new.templateId, new.ankiNoteId, new.created, new.updated, new.tags, new.fieldValues);",
    "END;",
    "CREATE TRIGGER IF NOT EXISTS note_after_delete INSTEAD OF DELETE ON note BEGIN\n  DELETE FROM noteBase WHERE id = old.id;",
    "END;",
    "CREATE TRIGGER IF NOT EXISTS note_after_update INSTEAD OF UPDATE ON note BEGIN\n  REPLACE INTO noteBase (id,     templateId,     ankiNoteId,     created,     updated,     tags,     fieldValues)\n  VALUES            (new.id, new.templateId, new.ankiNoteId, new.created, new.updated, new.tags, new.fieldValues);",
    "END;",
    "CREATE TABLE IF NOT EXISTS noteField (\n  noteId TEXT, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  field TEXT,\n  PRIMARY KEY (noteId, field)\n);",
    "CREATE VIEW IF NOT EXISTS noteFieldValue AS\n  SELECT\n    noteField.rowid,\n    field,\n    ftsNormalize(field) as normalizedField,\n                json_extract(fieldValues, '$.' || field)  as value,\n    ftsNormalize(json_extract(fieldValues, '$.' || field)) as normalizedValue\n  FROM noteField\n  JOIN noteBase on noteBase.id = noteField.noteId;",
    "CREATE VIRTUAL TABLE IF NOT EXISTS noteFvFts USING fts5 (\n  field,\n  value,\n  normalizedField,\n  normalizedValue,\n  content=noteFieldValue,\n  content_rowid=rowid,\n  tokenize='trigram'\n);",
    "CREATE VIRTUAL TABLE IF NOT EXISTS noteFtsTag USING fts5 (\n  tags,\n  content=noteBase,\n  content_rowid=rowid,\n  -- All characters that are not the unit separator are tokenchars 89CDE7EA-EF1B-4054-B381-597EE549CAB4\n  tokenize = \"unicode61 categories 'L* M* N* P* S* Z* C*' separators '␟'\"\n);",
    "CREATE VIRTUAL TABLE IF NOT EXISTS templateNameFts USING fts5 (\n  name,\n  normalized,\n  content=templateName,\n  content_rowid=rowid,\n  tokenize='trigram'\n);",
    "CREATE VIRTUAL TABLE IF NOT EXISTS cardSettingNameFts USING fts5 (\n  name,\n  normalized,\n  content=cardSettingName,\n  content_rowid=rowid,\n  tokenize='trigram'\n);",
    "CREATE VIRTUAL TABLE IF NOT EXISTS noteFtsTagVocab USING fts5vocab(noteFtsTag, instance);",
    "CREATE TRIGGER IF NOT EXISTS noteBase_after_insert AFTER INSERT ON noteBase BEGIN\n  INSERT INTO noteField (noteId, field)\n    SELECT\n      new.id,\n      json_each.key\n    FROM json_each(new.fieldValues);",
    "INSERT INTO noteFvFts (rowid, field, normalizedField, value, normalizedValue)\n    SELECT\n      rowid,\n      field,\n      ftsNormalize(field),\n                    json_extract(new.fieldValues, '$.' || field),\n      ftsNormalize(json_extract(new.fieldValues, '$.' || field))\n    FROM noteField\n    WHERE noteField.noteId = new.id;",
    "INSERT INTO noteFtsTag  (rowid, tags       ) VALUES (new.rowid, new.tags       );",
    "END;",
    "CREATE TRIGGER IF NOT EXISTS noteBase_after_delete AFTER DELETE ON noteBase BEGIN\n  DELETE FROM noteFvFts WHERE rowid IN (SELECT rowid FROM noteField WHERE noteId = old.id);",
    "DELETE FROM noteField WHERE noteId = old.id;",
    "INSERT INTO noteFtsTag(noteFtsTag, rowid, tags       ) VALUES('delete', old.rowid, old.tags       );",
    "END;",
    "CREATE TRIGGER IF NOT EXISTS noteBase_after_update AFTER UPDATE ON noteBase BEGIN\n  REPLACE INTO noteField (noteId, field)\n    SELECT\n      new.id,\n      json_each.key\n    FROM json_each(new.fieldValues);",
    "REPLACE INTO noteFvFts (rowid, field, normalizedField, value, normalizedValue)\n    SELECT\n      rowid,\n      field,\n      ftsNormalize(field),\n                    json_extract(new.fieldValues, '$.' || field),\n      ftsNormalize(json_extract(new.fieldValues, '$.' || field))\n    FROM noteField\n    WHERE noteField.noteId = new.id;",
    "INSERT INTO noteFtsTag(noteFtsTag, rowid, tags       ) VALUES('delete', old.rowid, old.tags       );",
    "INSERT INTO noteFtsTag(rowid, tags       ) VALUES (new.rowid, new.tags       );",
    "END;",
    "CREATE TRIGGER IF NOT EXISTS template_after_insert AFTER INSERT ON template BEGIN\n  INSERT INTO templateNameFts (rowid, name) VALUES (new.rowid, new.name);",
    "END;",
    "CREATE TRIGGER IF NOT EXISTS template_after_delete AFTER DELETE ON template BEGIN\n  INSERT INTO templateNameFts (templateNameFts, rowid, name) VALUES('delete', old.rowid, old.name);",
    "END;",
    "CREATE TRIGGER IF NOT EXISTS template_after_update AFTER UPDATE ON template BEGIN\n  INSERT INTO templateNameFts (templateNameFts, rowid, name) VALUES('delete', old.rowid, old.name);",
    "INSERT INTO templateNameFts (rowid, name) VALUES (new.rowid, new.name);",
    "END;",
    "CREATE TRIGGER IF NOT EXISTS cardSetting_after_insert AFTER INSERT ON cardSetting BEGIN\n  INSERT INTO cardSettingNameFts (rowid, name) VALUES (new.rowid, new.name);",
    "END;",
    "CREATE TRIGGER IF NOT EXISTS cardSetting_after_delete AFTER DELETE ON cardSetting BEGIN\n  INSERT INTO cardSettingNameFts (cardSettingNameFts, rowid, name) VALUES('delete', old.rowid, old.name);",
    "END;",
    "CREATE TRIGGER IF NOT EXISTS cardSetting_after_update AFTER UPDATE ON cardSetting BEGIN\n  INSERT INTO cardSettingNameFts (cardSettingNameFts, rowid, name) VALUES('delete', old.rowid, old.name);",
    "INSERT INTO cardSettingNameFts (rowid, name) VALUES (new.rowid, new.name);",
    "END;",
    "CREATE TABLE IF NOT EXISTS remoteNote (\n  localId TEXT, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  nook TEXT,\n  remoteId TEXT, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  uploadDate INTEGER,\n  PRIMARY KEY (localId, nook)\n) STRICT;",
    "CREATE TABLE IF NOT EXISTS cardBase (\n  id TEXT PRIMARY KEY, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  ord INTEGER,\n  noteId TEXT, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  tags TEXT,\n  created INTEGER,\n  updated INTEGER,\n  cardSettingId TEXT, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  due INTEGER,\n  state INTEGER\n) STRICT;",
    "CREATE VIEW IF NOT EXISTS card AS\n  SELECT rowid, * FROM cardBase;",
    "CREATE VIRTUAL TABLE IF NOT EXISTS cardFtsTag USING fts5 (\n  tags,\n  content=cardBase,\n  content_rowid=rowid,\n  -- All characters that are not the unit separator are tokenchars 89CDE7EA-EF1B-4054-B381-597EE549CAB4\n  tokenize = \"unicode61 categories 'L* M* N* P* S* Z* C*' separators '␟'\"\n);",
    "CREATE VIRTUAL TABLE IF NOT EXISTS cardFtsTagVocab USING fts5vocab(cardFtsTag, instance);",
    "CREATE TRIGGER IF NOT EXISTS cardBase_after_insert AFTER INSERT ON cardBase BEGIN\n  INSERT INTO cardFtsTag(rowid, tags       ) VALUES (new.rowid, new.tags       );",
    "END;",
    "CREATE TRIGGER IF NOT EXISTS cardBase_after_delete AFTER DELETE ON cardBase BEGIN\n  INSERT INTO cardFtsTag(cardFtsTag, rowid, tags       ) VALUES('delete', old.rowid, old.tags       );",
    "END;",
    "CREATE TRIGGER IF NOT EXISTS cardBase_after_update AFTER UPDATE ON cardBase BEGIN\n  INSERT INTO cardFtsTag(cardFtsTag, rowid, tags       ) VALUES('delete', old.rowid, old.tags       );",
    "INSERT INTO cardFtsTag(rowid, tags       ) VALUES (new.rowid, new.tags       );",
    "END;",
    "CREATE TABLE IF NOT EXISTS media (\n  id TEXT PRIMARY KEY, -- should stay TEXT!\n  created INTEGER,\n  updated INTEGER,\n  data BLOB,\n  hash BLOB\n) STRICT;",
    "CREATE TABLE IF NOT EXISTS remoteMedia (\n  localEntityId TEXT, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  i INTEGER,\n  localMediaId TEXT, -- should stay TEXT!\n  uploadDate INTEGER,\n  PRIMARY KEY (localEntityId, i)\n) STRICT;",
    "CREATE TABLE IF NOT EXISTS plugin (\n  name TEXT PRIMARY KEY, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  version TEXT,\n  dependencies TEXT,\n  created INTEGER,\n  updated INTEGER,\n  script BLOB\n) STRICT;",
    "CREATE TABLE IF NOT EXISTS review (\n  id TEXT PRIMARY KEY, -- make BLOB upon SQLite v3.41 and the landing of UNHEX https://sqlite.org/forum/forumpost/30cca4e613d2fa2a grep F235B7FB-8CEA-4AE2-99CC-2790E607B1EB\n  cardId TEXT,\n  created INTEGER,\n  rating INTEGER,\n  kind INTEGER,\n  details TEXT\n) STRICT;",
    "PRAGMA temp_store=MEMORY;",
    "-- grep 2790D3E0-F98B-4A95-8910-AC3E87F4F2D3\nCREATE INDEX IF NOT EXISTS cardBase_noteId_idx on cardBase(noteId);",
    "CREATE INDEX IF NOT EXISTS cardBase_created_idx on cardBase(created);",
    "CREATE INDEX IF NOT EXISTS noteBase_templateId_idx on noteBase(templateId);",
    "CREATE INDEX IF NOT EXISTS cardBase_due_idx on cardBase(due);",
    "CREATE INDEX IF NOT EXISTS review_cardId_idx on review(cardId);",
    "SELECT crsql_as_crr('template');",
    "SELECT crsql_as_crr('remoteTemplate');",
    "SELECT crsql_as_crr('noteBase');",
    "SELECT crsql_as_crr('remoteNote');",
    "SELECT crsql_as_crr('cardBase');",
    "SELECT crsql_as_crr('media');",
    "SELECT crsql_as_crr('remoteMedia');",
    "SELECT crsql_as_crr('plugin');"
]