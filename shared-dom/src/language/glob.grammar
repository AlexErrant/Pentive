// This exists because trying to incorporate globbing into "SimpleString" destroyed my will to live.
// Ideally we only have one grammar file, but I enjoy breathing.

@top Top { (Squared | Wildcard | Wildcard1 | Content)* }

Squared { SquareOpen ( notClose | range )+ ~a SquareClose }

range[@dynamicPrecedence=1] { RangeOpen ~a Dash RangeClose }
RangeOpen [closedBy=RangeClose] { notClose }
RangeClose[openedBy=RangeOpen ] { notClose }
notClose { Dash | Char }

@local tokens {
  SquareClose[openedBy=SquareOpen] { "]" }
  Dash { "-" }
  Char { ![\]-] }
}

@local tokens {
  // Ideally "^" would be a token, but I couldn't get the following desired behavior:
  // [a-b] to parse as SquareOpen,RangeOpen,Dash,RangeClose,SquareClose
  // [^-b] to parse as SquareOpen,Not,Dash,Char,SquareClose
  SquareOpen[closedBy=SquareClose] { "[" "^"? }
  Wildcard  { "*" }
  Wildcard1 { "?" }
  @else Content
}

@external propSource queryHighlighting from "./query.highlight.js"
